// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: users.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO Users (user_id,username,email,password_hash,balance)
VALUES ($1, $2, $3, $4,$5)
RETURNING user_id, username, email, password_hash, balance
`

type CreateUserParams struct {
	UserID       uuid.UUID
	Username     string
	Email        string
	PasswordHash string
	Balance      string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.UserID,
		arg.Username,
		arg.Email,
		arg.PasswordHash,
		arg.Balance,
	)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Username,
		&i.Email,
		&i.PasswordHash,
		&i.Balance,
	)
	return i, err
}
